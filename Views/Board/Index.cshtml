@model KanbanBoardMvc.Models.BoardModel;

@{
    ViewData["Title"] = Model.Title;
}
<!-- Add Task Dialog -->
<dialog hx-on:click="event.target === this && closeModel(this);" hx-ext="response-targets" id="add-task-dialog" class="backdrop:bg-black/80 text-foreground backdrop:open:animate-in backdrop:open:fade-in-0 open:animate-in open:grid w-full max-w-lg gap-4 border bg-background shadow-lg duration-200 sm:rounded-lg">
    <form method="dialog" class="p-6" hx-ext="include-custom-input">
        <button formnovalidate value="cancel" formmethod="dialog" class="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
            X
        </button>
        <div class="flex flex-col space-y-1.5 text-center sm:text-left">
            <h1 class="text-lg font-semibold leading-none tracking-tight">Add Task</h1>
            <p class="text-sm text-muted-foreground">Create new task</p>
        </div>
        <div class="flex flex-col py-4">
           <div>
                <label for="task-props-title" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Task Title</label>
                <input hx-validate required placeholder="e.g Take a coffee break" name="Title" class="flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50" id="task-props-title" type="text"/>
           </div>
            <div>
                <label for="task-props-description" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Task Description</label>
                <textarea hx-validate placeholder="e.g it's always good to take a break. This 15 minute break will recharge the batteries a little." name="Description" rows="4" cols="50" class="flex h-28 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50" id="task-props-description"></textarea>
            </div>
             <div is="item-list">
                <template data-item>
                    <li class="flex items-center gap-2">
                        <input placeholder="Task name" data-id="" data-name="Title" type="text" class="flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50"/>
                        <button data-trigger type="button" class="peer inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90 h-9 w-9">
                            X
                        </button>
                    </li>
                </template>
                <label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Subtasks</label>
                <ul data-items class="space-y-2 py-2"></ul>
                <button data-add-btn type="button" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80 h-9 px-4 py-2 w-full">Add Subtask</button>
            </div>
            <div>
                <label for="task-props-column" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Column</label>
                <select hx-get="/api/columns/options/@Model.Id" hx-trigger="update-columns from:window" hx-validate required hx-on:change="document.getElementById('submit-add-task-btn').setAttribute('hx-target',`#column-id-${this.value}`)" name="StatusId" id="task-props-column" class="flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1">
                    @foreach(var item in Model.Statuses){
                        <option value="@item.Id">@item.Title</option>
                    }
                </select>
            </div>
        </div>
        <div id="atd-server-error"></div>
        <div id="atd-client-error"></div>
        <div id="atd-indicator" class="hidden">Updating...</div>
        <div class="flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2">
            <button formnovalidate class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80 h-9 px-4 py-2" value="cancel" formmethod="dialog">Cancel</button>
            <button include-input="#add-task-dialog div[is=item-list]" hx-indicator="#atd-indicator" id="submit-add-task-btn" hx-target-5="#atd-server-error" hx-target-4="#atd-client-error" hx-swap="outerHTML" hx-target="#column-id-@Model.Statuses.FirstOrDefault()?.Id" hx-post="/api/tasks" hx-on::after-request="closeModel('add-task-dialog');" hx-validate hx-trigger="click" type="submit" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2">Ok</button>
        </div>
    </form>
</dialog>

<!-- Add Column Dialog -->
<dialog hx-on:click="event.target === this && closeModel(this);" hx-ext="response-targets" id="add-column-dialog" class="backdrop:bg-black/80 text-foreground backdrop:open:animate-in backdrop:open:fade-in-0 open:animate-in open:grid w-full max-w-lg gap-4 border bg-background shadow-lg duration-200 sm:rounded-lg">
     <form method="dialog" class="p-6">
        <button formnovalidate value="cancel" formmethod="dialog" class="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
            X
        </button>
        <div class="flex flex-col space-y-1.5 text-center sm:text-left">
            <h1 class="text-lg font-semibold leading-none tracking-tight">Add Column</h1>
            <p class="text-sm text-muted-foreground">Create new column</p>
        </div>
        <input hidden name="BoardId" value="@Model.Id"/>
        <div class="flex flex-col py-4">
           <div>
                <label for="column-props-title" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Column Title</label>
                <input hx-validate required name="Title" class="flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50" id="column-props-title" type="text"/>
           </div>
            <div>
                <label for="column-props-description" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Column Color</label>
                <input hx-validate required name="Color" class="flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50" id="column-props-color" type="color"/>
            </div>
        </div>
        <div id="acd-server-error"></div>
        <div id="acd-client-error"></div>
        <div id="acd-indicator" class="htmx-indicator">Updating...</div>
        <div class="flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2">
            <button formnovalidate class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80 h-9 px-4 py-2" value="cancel" formmethod="dialog">Cancel</button>
            <button hx-indicator="#acd-indicator" hx-target-5="#acd-server-error" hx-target-4="#acd-client-error" hx-target="#add-column-btn" hx-swap="beforebegin show:#add-column-btn:top swap:1s" hx-post="/api/columns" hx-on::after-request="closeModel('add-column-dialog');window.dispatchEvent(new CustomEvent('update-columns'));" hx-validate hx-trigger="click" type="submit" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2">Ok</button>
        </div>
    </form>
</dialog>

<!-- View Task Dialog -->
<dialog hx-on:click="event.target === this && closeModel(this);" hx-ext="response-targets" id="item-view-dialog" class="backdrop:bg-black/80 text-foreground backdrop:open:animate-in backdrop:open:fade-in-0 open:animate-in open:grid w-full max-w-lg gap-4 border bg-background shadow-lg duration-200 sm:rounded-lg">
    <form method="dialog" class="p-6" hx-ext="include-custom-input">
        <div id="task-view-content">
            <div class="flex flex-col space-y-1.5 text-center sm:text-left">
                <h1 class="text-lg font-semibold leading-none tracking-tight">Task</h1>
                <p class="text-sm text-muted-foreground">Task Description</p>
                <div id="ivd-indicator" class="htmx-indicator">Loading...</div>
            </div>
            <div class="flex flex-col py-4">
                <h6>Subtasks (0 of 0)</h6>
                <ul>

                </ul>
            </div>
        </div>
        <div id="ivd-server-error"></div>
        <div id="ivd-client-error"></div>
    </form>
</dialog>

<header class="px-4 z-20 justify-between w-full border-b h-20 items-center sm:sticky flex bg-secondary">
    <button hx-on:click="document.getElementById('sidenav').classList.toggle('hidden')" class="sm:hidden">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-menu"><line x1="4" x2="20" y1="12" y2="12"/><line x1="4" x2="20" y1="6" y2="6"/><line x1="4" x2="20" y1="18" y2="18"/></svg>
    </button>
    <h1 class="scroll-m-20 text-3xl font-semibold tracking-tight line-clamp-1">@Html.DisplayFor(e=>e.Title)</h1>
     <div class="flex gap-2">
        <button class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background bg-primary text-primary-foreground hover:bg-primary/90 h-10 py-2 px-4" onclick="document.getElementById('add-task-dialog').showModal()">Add Task</button>
        <div class="relative inline-block" is="dropdown-menu">
            <button data-trigger class="peer -z-50 inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-10 w-10">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-5 w-5"><path d="M10 3a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM10 8.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM11.5 15.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z"></path></svg>
            </button>
            <div data-content class="absolute z-50 hidden right-0 mt-2 w-56 origin-top-right bg-background shadow-lg ring-1 ring-accent ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                <div class="py-1" role="none">
                    <button hx-delete="/api/boards?id=@Model.Id" hx-confirm="Are you sure you wish to delete this board" hx-on::after-request="window.location.pathname = '/';" class="text-foreground block px-4 py-2 text-sm" role="menuitem" tabindex="-1">Delete Board</button>
                </div>
            </div>
        </div>
    </div>
</header>
<div class="hidden" id="no-swap"></div>
<form class="px-8 py-2 flex-col md:flex-row flex gap-6 h-full w-full overflow-scroll sortable" hx-patch="/api/list/columns" hx-trigger="end" hx-target="#no-swap">
    @for(var i = 0; i < Model.Statuses.Count(); i++){
        <section id="column-id-@Model.Statuses[i].Id" class="flex flex-col cursor-pointer z-0">
            <input hidden name="Column[@i]" value="@Model.Statuses[i].Id"/>
            <div class="flex justify-between items-center">
                <div class="flex gap-2 items-center py-4">
                    <div style="background-color: @Model.Statuses[i].Color;" class="h-4 w-4 rounded-full"></div>
                    <h4 class="scroll-m-20 text-sm font-semibold tracking-tight uppercase">@Model.Statuses[i].Title (@Model.Statuses[i].Tasks.Count())</h4>
                </div>
                 <div class="inline-block relative" is="dropdown-menu">
                    <button data-trigger type="button" class="peer -z-50 inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-10 w-10">
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path d="M10 3a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM10 8.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM11.5 15.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z">
                            </path>
                        </svg>
                    </button>
                    <div data-content class="absolute hidden right-0 z-10 mt-2 w-56 origin-top-right bg-background shadow-lg ring-1 ring-accent ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                        <div class="py-1" role="none">
                            <button hx-delete="/api/columns?id=@Model.Statuses[i].Id" hx-confirm="Are you sure you wish to delete this column" hx-on::after-request="document.getElementById('column-id-@Model.Statuses[i].Id').remove();window.dispatchEvent(new CustomEvent('update-columns'));" class="text-foreground block px-4 py-2 text-sm" role="menuitem" tabindex="-1">Delete Column</button>
                        </div>
                    </div>
                </div>
            </div>
            <ul data-group-name="task-group" class="space-y-4 w-72 sortable h-full" hx-patch="/api/list/tasks" hx-trigger="end consume">
                 @for(var j = 0; j < @Model.Statuses[i].Tasks.Count(); j++) {
                    <li hx-ext="response-targets" hx-indicator="#ivd-indicator" hx-target-5="#ivd-server-error" hx-target-4="#ivd-client-error" hx-get="/api/tasks/@Model.Statuses[i].Tasks[j].Id" hx-target="#task-view-content" onclick="showModel('item-view-dialog')" card-id="@Model.Statuses[i].Tasks[j].Id.ToString()" class="cursor-pointer rounded-lg border bg-card text-card-foreground shadow-sm">
                        <div class="flex flex-col space-y-1.5 p-6">
                            <h3 class="font-semibold leading-none tracking-tight">@Model.Statuses[i].Tasks[j].Title</h3>
                            <p class="text-sm text-muted-foreground">@Model.Statuses[i].Tasks[j].Description</p>
                        </div>
                        <input hidden name="Task[@j]" value="@Model.Statuses[i].Tasks[j].Id"/>
                    </li>
                }
            </ul>
        </section>
    }
    <button type="button" id="add-column-btn" class="non-sort rounded-lg border bg-card text-card-foreground shadow-sm hover:shadow-md h-20 w-full md:h-full md:w-96 md:min-w-96" onclick="showModel('add-column-dialog')">+New Column</button>
</form>
