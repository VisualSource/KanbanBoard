// <auto-generated />
using System;
using KanbanBoardMvc.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanbanBoardMvc.Migrations
{
    [DbContext(typeof(KanbanDbContext))]
    [Migration("20240107000310_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KanbanBoardMvc.Models.BoardModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ecc19fb-01c2-449c-959f-b485b6c7477d"),
                            Title = "Platform Launch"
                        },
                        new
                        {
                            Id = new Guid("b1002294-d420-4a25-b27b-9040f3197c60"),
                            Title = "Marketing Plan"
                        },
                        new
                        {
                            Id = new Guid("5f35a7cb-b73b-411e-a27e-0f5ad6632361"),
                            Title = "Roadmap"
                        });
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.StatusModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.SubTaskModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.TaskModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("char(36)");

                    b.Property<int>("SubtaskCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.StatusModel", b =>
                {
                    b.HasOne("KanbanBoardMvc.Models.BoardModel", "Board")
                        .WithMany("Statuses")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.SubTaskModel", b =>
                {
                    b.HasOne("KanbanBoardMvc.Models.TaskModel", "Task")
                        .WithMany("SubTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.TaskModel", b =>
                {
                    b.HasOne("KanbanBoardMvc.Models.StatusModel", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.BoardModel", b =>
                {
                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.StatusModel", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("KanbanBoardMvc.Models.TaskModel", b =>
                {
                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
