@using System.ComponentModel.DataAnnotations;
@using Microsoft.EntityFrameworkCore;
@attribute [StreamRendering]
@using DB.Service;
@inject ILogger<BoardColumn> Logger
@inject IDbContextFactory<ApplicationDbContext> ApplicationDbContextFactory;
@namespace BoardComponent

<div class="flex gap-2 items-center py-4">
    <div style="background-color: @Status.Color;" class="h-4 w-4 rounded-full"></div>
    <h4 class="scroll-m-20 text-sm font-semibold tracking-tight uppercase">@Status.Title (@if(Status.Tasks != null) {@Status.Tasks.Count()} else {})</h4>
</div>

@if(Status.Tasks != null) {
    <ul class="space-y-4 w-72">
        @foreach(var card in Status.Tasks) {
            <li card-id="@card.Id.ToString()" class="rounded-lg border bg-card text-card-foreground shadow-sm" draggable="true">
                <div class="flex flex-col space-y-1.5 p-6">
                    <h3 class="font-semibold leading-none tracking-tight">@card.Title</h3>
                    <p class="text-sm text-muted-foreground">@card.Description</p>
                </div>
            </li>
        }
    </ul>
} else {
    <div>Loading Tasks</div>
}

@code {

    [Parameter]
    public DB.Tables.Status Status { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
    }
}