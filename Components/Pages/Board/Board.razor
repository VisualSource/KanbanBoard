@page "/board/{id:guid}"
@using System.ComponentModel.DataAnnotations;
@using Microsoft.EntityFrameworkCore
@using DB.Service;
@using BoardComponent;
@inject ILogger<Board> Logger
@inject BoardService BoardService;
@inject NavigationManager Navigation;

@if(board != null){
    <PageTitle>@board.Title</PageTitle>
} else {
    <PageTitle>Loading Board</PageTitle>
}

<header class="px-4 justify-between w-full border-b h-20 items-center sm:sticky md:flex bg-secondary">
    @if(board != null) {
        <h1 class="scroll-m-20 text-3xl font-semibold tracking-tight">@board.Title</h1>
    } else {
        <h1 class="scroll-m-20 text-3xl font-semibold tracking-tight">Loading Board</h1>
    }
    <div class="flex gap-2">
        @if(board != null){
            <AddTask Id="@board?.Id.ToString()"/>
        }
        <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 h-9 w-9 hover:bg-accent hover:text-accent-foreground">:</button>
    </div>
</header>

<div class="px-8 py-2 flex gap-6 h-full w-full overflow-scroll">

        @if(board != null) {
            @foreach(var status in board.Statuses) {
                <section id="@status.Id.ToString()">
                    <BoardColumn @ref=@Ref Status=@status/>
                </section>
            }        
        } else {
            <section>Sekeletons</section>
        }

        <AddColumnDialog/>
</div>
@code {
    [Parameter]
    public System.Guid? Id { get; set; }
    private DB.Tables.Board? board;

    private List<BoardColumn> Refs = new List<BoardColumn>();

    private BoardColumn Ref {
        set => Refs.Add(value);
    }

    protected override async Task OnInitializedAsync(){
        if(Id is null) {
            Navigation.NavigateTo("");
            return;
        }

        board = await BoardService.GetBoard(Id.Value);
    }

}